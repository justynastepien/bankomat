package Bankomat
public
	with base_types;
	with sei;
	
	device klawiatura
		features
			numer_out: out data port Base_Types::Integer;
			bus_access: requires bus access bus1;
	end klawiatura;

	device implementation klawiatura.impl
	end klawiatura.impl;
	
	device czytnik_karty
		features
			dane_karty_out: out data port Base_Types::String;
			bus_access: requires bus access bus1;
	end czytnik_karty;

	device implementation czytnik_karty.impl
	end czytnik_karty.impl;

	device centrala
		features
			data_in: in event port;
			accept_out: out event port;
			stan_gotowki: in data port Base_Types::Float;
			bus_access: requires bus access bus1;
	end centrala;

	device implementation centrala.impl
	end centrala.impl;
	
	device panel
		features
			zadanie_out: out data port Base_Types::Integer;
			bus_access: requires bus access bus1;
	end panel;

	device implementation panel.impl
	end panel.impl;

	device sejf
		features
			wydaj_pieniadze_in: in data port Base_Types::Integer;
			wydane_pieniadze_out: out event port;
			stan_gotowki_out: out data port Base_Types::Float;
			bus_access: requires bus access bus1;
			bus_access2: requires bus access bus2;
	end sejf;

	device implementation sejf.impl
	end sejf.impl;

	
	device podajnik_gotowki
		features
			odblokuj_in: in event port;
			odblokowano_out: out event port;
			przelicz_in: in event port;
			przelicz_out: out data port Base_Types::Integer;
			bus_access: requires bus access bus1;
	end podajnik_gotowki;

	device implementation podajnik_gotowki.impl
	end podajnik_gotowki.impl;


	device drukarka
		features
			drukuj_dane_in: in event port;
			bus_access: requires bus access bus1;
	end drukarka;

	device implementation drukarka.impl
	end drukarka.impl;

	device wyswietlacz
		features
			wyswietl_in: in data port Base_Types::String;
			bus_access: requires bus access bus1;
	end wyswietlacz;

	device implementation wyswietlacz.impl
	end wyswietlacz.impl;
	
	-- THREADS
	
	thread wyswietl
		features
			wyswietl_in: in data port Base_Types::String;
			wyswietl_out: out data port Base_Types::String;
	end wyswietl;

	thread implementation wyswietl.impl
		properties
			Dispatch_protocol => Aperiodic;
			Compute_Execution_Time => 1 ms .. 2 ms;
	end wyswietl.impl;

	thread wplac
		features
			gotowka_in: in data port Base_Types::Integer;
			accept_in: in event port;
			odblokuj_pojemnik_out: out event port;
			pojemnik_response_in:  in event port;
			drukuj_out: out data port Base_Types::String;
			wyswietl_out: out data port Base_Types::String;
			przelicz_out: out event port;
--			akceptacja_out: out event port;
	end wplac;

	thread implementation wplac.impl
		properties
			Dispatch_protocol => Aperiodic;
			Compute_Execution_Time => 5 ms .. 15 ms;
	end wplac.impl;

	thread wyplac
		features
			accept_in: in event port;
			pojemnik_response_in:  in event port;
			sejf_response_in: in event port;
			odblokuj_pojemnik_out: out event port;
			wartosc_gotowki_in: in data port Base_Types::Integer;
			wydaj_gotowke_out: out data port Base_Types::Integer;
			drukuj_out: out data port Base_Types::String;
			wyswietl_out: out data port Base_Types::String;
	end wyplac;

	thread implementation wyplac.impl
		properties
			Dispatch_protocol => Aperiodic;
			Compute_Execution_Time => 3 ms .. 5 ms;
	end wyplac.impl;
	
	
	thread zdarzenie
		features
			numer_in: in data port Base_Types::Integer;
			accept_in: in event port;
			zdarzenie1_out: out event port;
			zdarzenie2_out: out event port;
	end zdarzenie;

	thread implementation zdarzenie.impl
		properties
			Dispatch_protocol => Aperiodic;
			Compute_Execution_Time => 2 ms .. 3 ms;
	end zdarzenie.impl;
	
	
	thread sejf_wyplac
		features
			wyplac_in: in data port Base_Types::Integer;
			wyplac_out: out data port Base_Types::Integer;
	end sejf_wyplac;

	thread implementation sejf_wyplac.impl
		properties
			Dispatch_protocol => Aperiodic;
			Compute_Execution_Time => 3 ms .. 5 ms;
	end sejf_wyplac.impl;
	
	
	thread drukuj
		features
			drukuj_in: in data port Base_Types::String;
			drukuj_out: out data port Base_Types::String;
	end drukuj;
	
	
	thread implementation drukuj.impl
		properties
			Dispatch_protocol => Aperiodic;
			Compute_Execution_Time => 3 ms .. 5 ms;
	end drukuj.impl;
	
	
	thread odblokuj_podajnik
		features
			odblokuj_in: in event port;
			odblokuj_out: out event port;
	end odblokuj_podajnik;

	thread implementation odblokuj_podajnik.impl
		properties
			Dispatch_protocol => Aperiodic;
			Compute_Execution_Time => 3 ms .. 5 ms;
	end odblokuj_podajnik.impl;
	
	
	thread hash
		features
			karta_in: in data port Base_Types::String;
			pin_in: in data port Base_Types::Integer;
			hash_dane_out: out data port Base_Types::String;
	end hash;

	thread implementation hash.impl
		properties
			Dispatch_protocol => Aperiodic;
			Compute_Execution_Time => 3 ms .. 5 ms;
	end hash.impl;
	
	thread przelicz
		features
			przelicz_in: in event port;
			przelicz_out: out event port;
	end przelicz;
	
	
	thread implementation przelicz.impl
		properties
			Dispatch_protocol => Aperiodic;
			Compute_Execution_Time => 2 ms .. 5 ms;
	end przelicz.impl;
	
	thread stan_gotowki
		features
			stan_in: in data port Base_Types::Float;
			stan_out: out data port Base_Types::Float;
	end stan_gotowki;
	
	
	thread implementation stan_gotowki.impl
		properties
			Dispatch_protocol => Aperiodic;
			Compute_Execution_Time => 2 ms .. 5 ms;
	end stan_gotowki.impl;
	
	
	--bus
		
	bus bus1
	end bus1;
	
	bus implementation bus1.impl
		properties
	  		SEI::BandWidthCapacity => 2.0 MBytesps;
	  		SEI::BandWidthBudget => 200.0 KBytesps;
	end bus1.impl;
	
	bus bus2
	end bus2;
	
	bus implementation bus2.impl
		properties
	  		SEI::BandWidthCapacity => 2.0 MBytesps;
	  		SEI::BandWidthBudget => 200.0 KBytesps;
	end bus2.impl;

	-- processor
	
	processor processor_1
		features
			bus_access: requires bus access bus1;
	end processor_1;

	processor implementation processor_1.impl
	end processor_1.impl;
	
	processor processor_2
		features
			bus_access: requires bus access bus2;
	end processor_2;

	processor implementation processor_2.impl
	end processor_2.impl;
	
--process

	process controller
		features
			
			odblokuj_podajnik_out: out event port;
			centrala_accept_in: in event port;
			przelicz_out: out event port;
			
			pojemnik_response_in:  in event port;
			sejf_response_in: in event port;
			
			-- Data ports
			pin_in: in data port Base_Types::Integer;
			ilosc_gotowki_in: in data port Base_Types::Integer;
			czytnik_in: in data port Base_Types::String;
			wyswietl_out: out data port Base_Types::String;	
			drukarka_out: out data port Base_Types::String;
			panel_in: in data port Base_Types::Integer;
			zawartosc_pojemnika_in: in data port Base_Types::Integer;
			sejf_wydaj_pieniadze_out: out data port Base_Types::Integer;
			dane_konta_out: out data port Base_Types::String;
			
	end controller;

	process implementation controller.impl
		subcomponents
			thread_wyswietl: thread wyswietl.impl;
			thread_wyplac: thread wyplac.impl;
			thread_wplac: thread wplac.impl;
			thread_zdarzenie: thread zdarzenie.impl;
			thread_hash: thread hash.impl;
			thread_sejf_wyplac: thread sejf_wyplac.impl;
			thread_odblokuj_podajnik: thread odblokuj_podajnik.impl;
			thread_drukuj: thread drukuj.impl;
			thread_przelicz: thread przelicz.impl;
			
		connections
			pin_in_conn: port pin_in -> thread_hash.pin_in;
			karta_in_conn: port czytnik_in -> thread_hash.karta_in;
			hash_dane_out_conn: port thread_hash.hash_dane_out -> dane_konta_out;
			zdarzenie_in1_conn: port centrala_accept_in -> thread_zdarzenie.accept_in;
			zdarzenie_in2_conn: port panel_in -> thread_zdarzenie.numer_in;
			zdarzenie_out1_conn: port thread_zdarzenie.zdarzenie1_out -> thread_wyplac.accept_in;
			zdarzenie_out2_conn: port thread_zdarzenie.zdarzenie2_out -> thread_wplac.accept_in;
			--wyplac
			wyplac_in1_conn: port ilosc_gotowki_in -> thread_wyplac.wartosc_gotowki_in;
			wyplac_in2_conn: port pojemnik_response_in -> thread_wyplac.pojemnik_response_in;
			wyplac_in3_conn: port sejf_response_in -> thread_wyplac.sejf_response_in;
			wyplac_sejf_conn: port thread_wyplac.wydaj_gotowke_out-> thread_sejf_wyplac.wyplac_in;
			sejf_out_conn: port thread_sejf_wyplac.wyplac_out -> sejf_wydaj_pieniadze_out;
			wyplac_odblokuj_conn: port thread_wyplac.odblokuj_pojemnik_out->thread_odblokuj_podajnik.odblokuj_in;
			podajnik_out_conn: port thread_odblokuj_podajnik.odblokuj_out->odblokuj_podajnik_out;
			wyplac_drukuj_conn: port thread_wyplac.drukuj_out->thread_drukuj.drukuj_in;
			drukuj_out_conn: port thread_drukuj.drukuj_out->drukarka_out;
			wyplac_wyswietl_conn: port thread_wyplac.wyswietl_out->thread_wyswietl.wyswietl_in;
			wyswietl_out_conn: port thread_wyswietl.wyswietl_out->wyswietl_out;
			--wplac
			wplac_odblokuj_conn: port thread_wplac.odblokuj_pojemnik_out->thread_odblokuj_podajnik.odblokuj_in;
			wplac_in_conn: port zawartosc_pojemnika_in -> thread_wplac.gotowka_in;
			wplac_przelicz_conn: port thread_wplac.przelicz_out->thread_przelicz.przelicz_in;
			przelicz_out_conn: port thread_przelicz.przelicz_out->przelicz_out;	
			wplac_drukuj_conn: port thread_wplac.drukuj_out->thread_drukuj.drukuj_in;
			wplac_wyswietl_conn: port thread_wplac.wyswietl_out->thread_wyswietl.wyswietl_in;
			wplac_in2_conn: port pojemnik_response_in -> thread_wplac.pojemnik_response_in;
	end controller.impl;
	
	process controller_2
		features
			sprawdz_in: in data port Base_Types::Float;
			sprawdz_out: out data port Base_Types::Float;
	end controller_2;

	process implementation controller_2.impl
		subcomponents
			thread_stan_gotowki: thread stan_gotowki.impl;
		connections
			sprawdz_in_conn: port sprawdz_in->thread_stan_gotowki.stan_in;
			sprawdz_out_conn: port thread_stan_gotowki.stan_out->sprawdz_out;
	end controller_2.impl;
	
	
	
	--System

	system bankomat
	end bankomat;
	
	system implementation bankomat.impl
		subcomponents
			device_panel: device panel;
			device_czytnik_karty: device czytnik_karty;
			device_centrala: device centrala;
			device_sejf: device sejf;
			device_podajnik_gotowki: device podajnik_gotowki;
			device_wyswietlacz: device wyswietlacz;
			device_drukarka: device drukarka;
			device_klawiatura: device klawiatura;
			process_controller: process controller;
			process_second_controller: process controller_2.impl;
			processor_processor: processor processor_1.impl;
			processor_processor_2: processor processor_2.impl;
			bus_1_connection: bus bus1.impl;
			bus_2_connection: bus bus2.impl;
		connections
			-- Controller
			panel_in_conn: port device_panel.zadanie_out -> process_controller.panel_in;
			czytnik_karty_in_conn: port device_czytnik_karty.dane_karty_out->process_controller.czytnik_in;
			klawiatura_in_conn: port device_klawiatura.numer_out->process_controller.pin_in;
			sejf_response_in_conn: port device_sejf.wydane_pieniadze_out->process_controller.sejf_response_in;
			ilosc_gotowki_in_conn: port device_klawiatura.numer_out->process_controller.ilosc_gotowki_in;
			pojemnik_response_in_conn: port device_podajnik_gotowki.odblokowano_out->process_controller.pojemnik_response_in;
			centrala_accept_in_conn: port device_centrala.accept_out->process_controller.centrala_accept_in;
			zawartosc_pojemnika_in_conn: port device_podajnik_gotowki.przelicz_out->process_controller.zawartosc_pojemnika_in;
			
			dane_konta_out_conn: port process_controller.dane_konta_out->device_centrala.data_in;
			sejf_wydaj_pieniadze_out_conn: port process_controller.sejf_wydaj_pieniadze_out->device_sejf.wydaj_pieniadze_in;
			drukarka_out_conn: port process_controller.drukarka_out->device_drukarka.drukuj_dane_in;
			odblokuj_podajnik_out_conn: port process_controller.odblokuj_podajnik_out->device_podajnik_gotowki.odblokuj_in;
			wyswietl_out_conn: port process_controller.wyswietl_out->device_wyswietlacz.wyswietl_in;
			przelicz_out_conn: port process_controller.przelicz_out->device_podajnik_gotowki.przelicz_in;
			
			--Controller 2
			sprawdz_in_conn: port device_sejf.stan_gotowki_out->process_second_controller.sprawdz_in;
			sprawdz_out_conn: port process_second_controller.sprawdz_out->device_centrala.stan_gotowki;
			
			--bus
			bus_panel: bus access bus_1_connection -> device_panel.bus_access;
			bus_klawiatura: bus access bus_1_connection -> device_klawiatura.bus_access;
			bus_czytnik_karty: bus access bus_1_connection -> device_czytnik_karty.bus_access;
			bus_centrala: bus access bus_1_connection -> device_centrala.bus_access;
			bus_sejf: bus access bus_1_connection -> device_sejf.bus_access;
			bus_sejf_2: bus access bus_2_connection -> device_sejf.bus_access2;
			bus_wyswietlacz: bus access bus_1_connection -> device_wyswietlacz.bus_access;
			bus_podajnik_gotowki: bus access bus_1_connection -> device_podajnik_gotowki.bus_access;
			bus_drukarka: bus access bus_1_connection -> device_drukarka.bus_access;
			bus_processor: bus access bus_1_connection -> processor_processor.bus_access;
			bus_second_processor: bus access bus_2_connection -> processor_processor_2.bus_access;
		properties
			Actual_Processor_Binding => (reference(processor_processor))  applies to process_controller;
  			Actual_Processor_Binding => (reference(processor_processor_2))  applies to process_second_controller;
  			Actual_Connection_Binding  => (reference(bus_1_connection)) applies to panel_in_conn;
  			Actual_Connection_Binding  => (reference(bus_1_connection)) applies to czytnik_karty_in_conn;
  			Actual_Connection_Binding  => (reference(bus_1_connection)) applies to klawiatura_in_conn;
  			Actual_Connection_Binding  => (reference(bus_1_connection)) applies to sejf_response_in_conn;
  			
  			
  			
  		end bankomat.impl;
  		
end Bankomat;
